services:
  bookify:
    build: .
    dockerfile: Dockerfile
    depends_on:
      migrations:
        condition: service_completed_successfully
      keycloak:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=BookifyDB;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
      - Keycloak__BaseUrl=http://keycloak:8080
      - Keycloak__Realm=bookify
      - Keycloak__ClientId=bookify-back-end
      - Keycloak__Secret=fftGCkyRUJkbwUnBf3vB0f2jxEgPNBxo
    ports:
      - "5000:5000"
      - "5001:5001"
    volumes:
      - ./certs:/app/cert
    entrypoint: ["dotnet", "Bookify.dll"]

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=BookifyDB;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
      
  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    depends_on:
      keycloak-db:
        condition: service_healthy
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HEALTH_ENABLED=true
    volumes:
      - ./keycloak/realm-export:/opt/keycloak/data/import
    command: ["start-dev", "--import-realm"]
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 15
      start_period: 60s
      
  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    ports:
      - "5432:5432"
    volumes:
      - keycloak-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U keycloak -d keycloak
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  keycloak-data: