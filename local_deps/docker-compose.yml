services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    ports:
      - "8081:8080"  # Esposto su 8081 per evitare conflitti con Keycloak
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app-network
      
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - app-network
      
  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=mysecretpassword
      - KC_HEALTH_ENABLED=true
    volumes:
      - ./keycloak/realm-export:/opt/keycloak/data/import
    command: ["start-dev", "--import-realm", "--features=scripts"]
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 15
      start_period: 60s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: